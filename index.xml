<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>erenon.hu</title>
    <link>http://erenon.hu/</link>
    <description>Recent content on erenon.hu</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 07 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="http://erenon.hu/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Preprocessor foreach compile time</title>
      <link>http://erenon.hu/posts/2022-03-07-preprocessor_foreach_compile_time/</link>
      <pubDate>Mon, 07 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2022-03-07-preprocessor_foreach_compile_time/</guid>
      <description>Assume you want to create a preprocessor macro that takes a macro F and a variable number of arguments. When expanded, it invokes F with each argument:
#define FOREACH(F, ...) //...  FOREACH(G, a, b, c) // expands to: G(a) G(b) G(c) Such a macro can be useful for example for a log library. There are several ways to implement it. Here, we compare three different implementations, with regard to complexity, ease of change, and compile time.</description>
    </item>
    
    <item>
      <title>Snapcast on Demand</title>
      <link>http://erenon.hu/posts/2022-02-21-snapcast-on-demand/</link>
      <pubDate>Mon, 21 Feb 2022 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2022-02-21-snapcast-on-demand/</guid>
      <description>Snapcast is a wonderful piece of software: a multiroom client-server audio player, where all clients are time synchronized with the server to play perfectly synced audio. It allows you to play the same music in different rooms, at the same time, using multiple devices.
Normally, I listen to music on my desktop. Sometimes, however, I&amp;rsquo;d like to broadcast music to another room. In that room, there&amp;rsquo;s a raspberry pi connected to a set of speakers.</description>
    </item>
    
    <item>
      <title>Review of Thriving in a Crowded and Changing World</title>
      <link>http://erenon.hu/posts/cpp_hopl_comments/</link>
      <pubDate>Sun, 09 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/cpp_hopl_comments/</guid>
      <description>Thriving in a Crowded and Changing World is a bulky paper written by C++ author Bjarne Stroustrup for the History of Programming Languages ACM conference. I collected a few quotes below that I found interesting.
 I wanted that tool to write a version of the Unix kernel that could work on multiple processors connected through a local area network or a shared memory.
 What happened to that vision?</description>
    </item>
    
    <item>
      <title>Nextcloud on RPi4 with Arch Linux</title>
      <link>http://erenon.hu/posts/2021-10-12-nextcloud-on-rpi/</link>
      <pubDate>Tue, 12 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2021-10-12-nextcloud-on-rpi/</guid>
      <description>I experimented with Nextcloud 22 on a Raspberry Pi 4 8 GB, running the aarch64 build of Arch Linux ARM. I found the setup too slow to be useful: even with caching, switching between tabs on the web interface takes seconds, while top shows php-fpm consuming a lot of CPU. Either further tuning would be required, or this hardware is simply too slim for this kind of workload, or more efficient software needs to be produced.</description>
    </item>
    
    <item>
      <title>Input Latency</title>
      <link>http://erenon.hu/posts/2021-10-11-input-latency/</link>
      <pubDate>Mon, 11 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2021-10-11-input-latency/</guid>
      <description>This post was inspired by Dan Luu: Computer Latency. I felt that my work setup (see below) is sluggish, even though I got used to it. I wanted to quantify how sluggish it really is. Also, VSCode was advertised to offer a lower latency experience (compared to ssh+vim), as it runs and renders on the local machine: I didn&amp;rsquo;t feel it - I wanted to verify my observation, knowing that I use vim for too long to acknowledge its shortcomings.</description>
    </item>
    
    <item>
      <title>Bootstrap aarch64 image on X86</title>
      <link>http://erenon.hu/posts/2021-03-21-aarch64-image-on-x86/</link>
      <pubDate>Sun, 21 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2021-03-21-aarch64-image-on-x86/</guid>
      <description>The current (2021-Feb-05) aarch64 Arch Linux ARM image has issues on 8GB Raspberry Pi 4 models: It does not bring up the network interface, and the USB ports are not working, making any interactive fix difficult (without serial cable).
A possible fix is to replace the default kernel with a Raspberry specific one. It still results in a 64bit system, only with a non-upstream kernel. If there&amp;rsquo;s a different ARM system available, it is trivial to mount/boot the SD card there and apply the required changes.</description>
    </item>
    
    <item>
      <title>Automated, encrypted b2 backups with rclone</title>
      <link>http://erenon.hu/posts/encrypted_backup_rclone/</link>
      <pubDate>Wed, 03 Mar 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/encrypted_backup_rclone/</guid>
      <description>Here&amp;rsquo;s how to create automated, secure backups on blackblaze using rclone and systemd.
First, register a new blackblaze b2 account if you don&amp;rsquo;t have one already. Make sure you select the right region during sign-up - it cannot be changed later. Create a new bucket, name it after your hostname. Create a b2 rclone remote (see doc). Create a crypt overlay over the b2 remote (see doc). Generate long passwords.</description>
    </item>
    
    <item>
      <title>Store SSH key passphrase in password manager</title>
      <link>http://erenon.hu/posts/2021-02-08-ssh-with-pass/</link>
      <pubDate>Mon, 08 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2021-02-08-ssh-with-pass/</guid>
      <description>The ssh-agent program can be used to manage unlocked SSH keys. The ssh-add program can be used to add keys to a running ssh-agent. By default, ssh-add uses TTY to ask for a password, if the selected key is password protected.
The pass program is a password manager that follows the Unix philosophy. If you want to use pass together with ssh-add, first add the private key password to it:</description>
    </item>
    
    <item>
      <title>Useful FreeRDP flags for good performance</title>
      <link>http://erenon.hu/posts/2021-01-25-freerdp/</link>
      <pubDate>Mon, 25 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2021-01-25-freerdp/</guid>
      <description>I need to use RDP to connect to a Windows 10 machine. Equipped with a 4k display, on Arch Linux, with FreeRDP 2.2.0, the following combination of flags turned out to be the best: -grab-keyboard /gfx-h264:avc444 +gfx-progressive.
To make it work, first make sure hardware acceleration is enabled. With AMD:
$ sudo pacman -Sy xf86-video-amdgpu libva-mesa-driver freerdp Then add this .desktop file:
$ cat .local/share/applications/xfreerdp.desktop [Desktop Entry] Name=XFreeRDP Comment=Connect to remote desktops using RDP Exec=xfreerdp %U -grab-keyboard /gfx-h264:avc444 +gfx-progressive Terminal=false Type=Application StartupNotify=false MimeType=application/x-rdp-type; Without /gfx-h264:avc444, certain UI elements (e.</description>
    </item>
    
    <item>
      <title>Overloading by concept without concepts in C&#43;&#43; part II</title>
      <link>http://erenon.hu/posts/2021-01-14-concept-overloading-2/</link>
      <pubDate>Thu, 14 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2021-01-14-concept-overloading-2/</guid>
      <description>In the previous post, we&amp;rsquo;ve seen how to select an overload from a set of functions based on concepts matching the arguments, without actual concept support in the C++ language. The described solution allows a library to define a single set of overloads.
However, how to allow the client to override the library provided overload for a given concept? Simply adding a specialization would result in ambiguous function calls. If not today, probably later, when the library changes - making the solution hard to maintain.</description>
    </item>
    
    <item>
      <title>Overloading by concept without concepts in C&#43;&#43;</title>
      <link>http://erenon.hu/posts/2019-09-12-concept-overloading/</link>
      <pubDate>Thu, 12 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2019-09-12-concept-overloading/</guid>
      <description>Given the following function:
void f(int);  Suppose you want to make the behaviour of this function to depend on the argument type. A simple way to use overloading:
void f(int); void f(double);  What if you want to define an overload for a set of types, which satisfy a given concept? As of C++20, concepts can be used for overloading. Before that, the function has to be converted to a template.</description>
    </item>
    
    <item>
      <title>Applied Ephemeralization</title>
      <link>http://erenon.hu/posts/2019-04-28-applied-ephemeralization/</link>
      <pubDate>Sun, 28 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2019-04-28-applied-ephemeralization/</guid>
      <description>Ephemeralization Do more and more with less and less until eventually you can do everything with nothing Ephemeralism Do more with less, until you can do everything with nothing  Also see Wikipedia on Ephemeralization</description>
    </item>
    
    <item>
      <title>How to share a calendar entry</title>
      <link>http://erenon.hu/posts/2018-05-30-how-to-share-a-calendar-entry/</link>
      <pubDate>Wed, 30 May 2018 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2018-05-30-how-to-share-a-calendar-entry/</guid>
      <description>Suppose you&amp;rsquo;d like to share a calendar event over the internet, e.g: on your website. The goal is to be support as many platforms as possible:
 Desktop calendars (Thunderbird, macOS iCal, Outlook) Web applications (Google Calendar) Smartphone applications (Google Calendar App, iOS iCal)  The most intuitive way is to create the event in your calendar of choice, and send the invites in the native way provided by the application.</description>
    </item>
    
    <item>
      <title>The sorcerers frog</title>
      <link>http://erenon.hu/posts/2014-03-29-the-sorcerers-frog/</link>
      <pubDate>Sat, 29 Mar 2014 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2014-03-29-the-sorcerers-frog/</guid>
      <description>Once there was a sorcerer who had the most shining gold. A simple and mild man came to him and wanted to buy this gold from him. The sorcerer said to the simple man: &amp;ldquo;You will not receive this gold, unless you give me better gold and in larger quantity.&amp;quot; The man said: &amp;ldquo;I have such a great desire for your gold that I will give you what you want rather than losing it.</description>
    </item>
    
    <item>
      <title>Bootstrap Typeahead submit on select</title>
      <link>http://erenon.hu/posts/2013-03-02-bootstrap-typeahead-submit-on-select/</link>
      <pubDate>Sat, 02 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2013-03-02-bootstrap-typeahead-submit-on-select/</guid>
      <description>The Twitter Bootstraps Typeahead is a very nice way to provide autocomplete functionality on your text inputs. However, the default configuration might be a bit confusing. When the user clicks on a suggestion in the dropdown menu, the utility populates the input but doesn&amp;rsquo;t submit the form. It&amp;rsquo;s usually ok, but sometimes (e.g: search boxes) it&amp;rsquo;s frustrating. Here&amp;rsquo;s how to change it:
var input = $(&amp;#39;#your-input-box&amp;#39;); input.typeahead({ &amp;#39;source&amp;#39; : [&amp;#39;foo&amp;#39;, &amp;#39;bar&amp;#39;, &amp;#39;baz&amp;#39;], &amp;#39;updater&amp;#39; : function(item) { this.</description>
    </item>
    
    <item>
      <title>Imprisoned Toroid - Raytrace on CUDA</title>
      <link>http://erenon.hu/posts/2012-11-25-imprisoned-toroid-raytrace-on-cuda/</link>
      <pubDate>Sun, 25 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>http://erenon.hu/posts/2012-11-25-imprisoned-toroid-raytrace-on-cuda/</guid>
      <description>The following video is created by a C++/CUDA program using the theory of raytracing which was the most interesting piece of knowledge I learned on the university this semester.
Because of its as-good-as-it-should-be quality of the source, I can&amp;rsquo;t opensource it at this precise moment. Meanwhile, take a look at OptiX, which I found a month later I had completed this.
The video was rendered at 24 FPS, render time appr.</description>
    </item>
    
  </channel>
</rss>
